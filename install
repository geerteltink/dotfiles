#!/usr/bin/env bash
set -Eueo pipefail

# =======================================================================
# Helpers & setting some variables
# =======================================================================

export DOTFILES_DIR="$HOME/.dotfiles"

source "${DOTFILES_DIR}/lib/log.sh"

cat <<EOF
$RED
                           _       _    __ _ _
                          | |     | |  / _(_) |
                        __| | ___ | |_| |_ _| | ___  ___
                       / _. |/ _ \| __|  _| | |/ _ \/ __|
                      | (_| | (_) | |_| | | | |  __/\__ \ $()
                     (_)__,_|\___/ \__|_| |_|_|\___||___/
$RESET
EOF

if [ -d "$DOTFILES_DIR/.git" ]; then
cat <<EOF
$RED
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'commit:  %h')
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'date:    %ad' --date=short)
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'author:  %an')
         $(git --git-dir "$DOTFILES_DIR/.git" --work-tree "$DOTFILES_DIR" log -n 1 --pretty=format:'message: %s')
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$RESET
EOF
fi

# =======================================================================
# Update system
# =======================================================================

SKIP_UPDATE=0
if [ $# -ge 1 ] && [ "$1" = "--skip-update" ]; then
  SKIP_UPDATE=1
fi

if [ $SKIP_UPDATE = 0 ]; then
  log_info "Updating system..."
  sudo apt update
  sudo NEEDRESTART_MODE=a apt -y -o APT::Get::Always-Include-Phased-Updates=true upgrade
  log_info "Updating dotfiles..."
  git pull --rebase --autostash
fi

# =======================================================================
# Package installation
# =======================================================================

PACKAGES=(
  apt-transport-https
  ca-certificates
  software-properties-common
  make
  screenfetch
  curl
  gnupg
  jc
  jq
  crudini
  wget
  unzip
)

for pkg in "${PACKAGES[@]}"; do
  dpkg -s $pkg > /dev/null 2>&1 || sudo apt -y install $pkg
done

# =======================================================================
# Install components
# =======================================================================

find . -name install.sh | while read installer ; do
  log_info "Installing ${installer}..."
  sh -c "${installer}" ;
done

# =======================================================================
# Update components
# =======================================================================

if [ $SKIP_UPDATE = 0 ]; then
  find . -name *.update.sh | while read script ; do
    sh -c "${script}" ;
  done
fi

# =======================================================================
# Cleanup system
# =======================================================================

if [ $SKIP_UPDATE = 0 ]; then
  log_info "Cleaning up system..."
  sudo NEEDRESTART_MODE=a apt -y autoremove
  sudo apt -y clean
fi

log_success "Job's done!"
